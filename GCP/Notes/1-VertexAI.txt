Vertex AI is a comprehensive machine learning development platform that provides 
both predictive and generative AI capabilities. It allows you to train, evaluate, 
and deploy predictive machine learning models for forecasting purposes. 
Additionally, you can utilize the platform to discover, tune, and serve generative 
AI models to produce content.

Vertex AI Studio lets you quickly test and customize generative AI models so you 
can leverage their capabilities in your applications. It provides a variety of 
tools and resources including both UI (user interface) and coding examples that 
make it easy to start with generative AI, even if you don't have a background 
in machine learning.

Here you will learn about Vertex AI Studio, where you can unlock the potential 
of cutting-edge generative AI models. You'll explore Gemini and use it to 
analyze images, design prompts, and generate conversations directly on the 
Google Cloud console. No need for API or Python SDKs - it's all accessible 
through the intuitive user interface.

you will learn how to:

--Analyze images with Gemini
--Explore Vertex AI Studio Freeform mode
--Design text prompts for zero-shot, one-shot, and few-shot prompting
--Generate conversations with chat prompts

Task 1. 
Analyze images with Gemini in Freeform mode
you will use Gemini to analyze an image and extract information from it. 
In Freeform mode, you can design prompts for various tasks such as classification, 
extraction, and generation. 
There is no conversation history in Freeform mode, so every prompt is a 
brand-new request to the model.

Enable the Vertex AI API
In the Google Cloud console, enter Vertex AI API in the top search bar.

You can click on 'enable all recommended APIs'

If Vertex AI API not enabled earlier, click on it
Click Enable.

Click on show API list to see which APIs are enabled.

Vertex AI API
Train high-quality custom machine learning models with minimal machine 
learning expertise and effort.

Analyze images with Gemini
In the Google Cloud console, from the Navigation menu (Navigation menu), 
select Vertex AI > Vertex AI Studio > Overview.

shows:
Vertex AI Studio
Test, tune and deploy enterprise-ready generative AI

Under Generate with Gemini, click Open Freeform.
The UI contains three main sections:

Prompt (located in the center): Here, you can create a prompt that utilizes 
multimodal capabilities.
Configuration (located on the right): This section allows you to select models, 
configure parameters, and obtain the corresponding code.
Response (located at the bottom): This section displays the results of your prompt.

On the top left, click Untitled Prompt and rename your prompt as Image Analysis.

In the Configuration section on the top right, click on the Model dropdown then 
select the gemini-1.5-pro-002 model.(region: Global & let other details be defaults)

Note:The model name and version may change with the release of new models.

Download the sample image. Right-click the timetable image and then save it to 
your desktop.
On the top right of the Prompt section, click Insert media > Upload. 
Upload the timetable image you downloaded. The media can be in the form of an image,
video, text, or audio file.

The image will be displayed inside of the Prompt section. 
Copy the following text and paste it under the image and click on the
Submit button on the bottom right of the Prompt section.
  Prompt: Title the image

Or be more specific:
  Prompt: Title the image in 3 words.

click on submit(play icon)
Does the title meet your expectations? Try to modify the prompt to see if you get 
different results.

Describe the image. Replace the previous prompt with the following and 
click the Submit button.
  Prompt: Describe the image in detail

Output Response begins---
Close-up, slightly low-angle view of a digital display board typically found in 
an airport or train station. 
The board is dark-colored, possibly black or dark gray, and displays flight or train 
information in bright orange-red LED lights. The text is arranged in rows, 
with the departure time on the left and the destination city and airport 
code (or station code) on the right. 
The text is clear and legible, despite the pixelated nature of the display. 
The times shown range from 10:50 to 12:45. Destinations listed include Moscow, 
Edinburgh, London (LHR and LGW), Bucharest, Kyiv (Borispol), Dublin, East Midlands, 
Sofia, Newcastle, St. Petersburg, and Manchester. 
The background is out of focus but shows the interior structure of the building, 
likely a large, open space with metal beams or supports. These supports appear 
light blue-gray in color and have a curved or arched structure.  The overall 
lighting suggests a daytime scene. The focus is clearly on the departure board, 
making the background details less distinct.
--response ends---

Tune the parameter. In the Configuration section, adjust the temperature by scrolling 
from left (0) to right (2). Resubmit the prompt to observe any changes in the outcome 
compared to the previous result.

Output Response begins---
Close-up, slightly low-angle view of a digital display board typically found in an 
airport or train station. 
The board is dark-colored, possibly black or dark gray, and displays arrival or 
departure information in bright orange-red LED lights. The text is arranged in 
rows, with each row showing a time followed by a destination.  The times are formatted
 with a colon separating hours and minutes. The destinations include city names, 
 some with three-letter airport codes appended (like LHR, OTP, and LGW).
The visible entries include destinations like Moscow, Edinburgh, London (LHR and LGW),
 Bucharest, Kiev (Borispol), Dublin, East Midlands, Sofia, Newcastle, 
 St. Petersburg, and Manchester.
The background behind the display board is out of focus but shows architectural elements of the building.  A curved metallic structure, possibly part of the roof or ceiling support, is visible, suggesting a modern, spacious transportation hub.  The colors in the background are cool-toned blues and grays. The metallic structure occupies most of the left portion of the frame. The upper portion seems to show roof paneling, while the lower portion is unidentifiable but also blurred.
---response ends---

Note*Temperature controls the degree of randomness in token selection. 
Lower temperatures are good for prompts that expect a true or correct response, 
while higher temperatures can lead to more diverse, unexpected, or potentially 
biased results. 
With a temperature of 0 the highest probability token is always selected.

Extract the text from the image. Replace the previous prompt with the following:
  Prompt: Read the text in the image.
<submit>

--response--
10:50 MOSCOW/SVO 11:05 EDINBURGH 11:05 LONDON/LHR 11:10 BUCHAREST/OTP 11:30 
KIEV/BORISPOL 11:35 DUBLIN 11:45 EAST MIDLANDS 12:15 SOFIA 12:30 LONDON/LGW 
12:30 NEWCASTLE 12:40 ST PETERSBURG 12:40 LONDON/LGW 12:45 MANCHESTER
--response ends---

Further on, if you want to format the output to a list, replace the previous prompt 
with the following:

  Prompt: Parse the time and city in this image into a list with two columns:
  time and city.

--response begins--
Here's the parsed list of times and cities:

| Time  | City              |
|-------|-------------------|
| 10:50 | Moscow/SUO       |
| 11:05 | Edinburgh         |
| 11:05 | London/LHR       |
| 11:10 | Bucharest/OTP     |
| 11:30 | Kiev/Borispol   |
| 11:35 | Dublin            |
| 11:45 | East Midlands      |
| 12:15 | Sofia            |
| 12:30 | London/LGW       |
| 12:30 | Newcastle        |
| 12:40 | St Petersburg    |
| 12:40 | London/LGW       |
| 12:45 | Manchester       |
--------------------response ends---------

Your turn - try out some different prompts! How do these results differ from before?

for example:
  Prompt: show the city names from the image in one line

--response--
MOSCOW, EDINBURGH, LONDON, BUCHAREST, KIEV, DUBLIN, EAST MIDLANDS, SOFIA, LONDON, NEWCASTLE, ST PETERSBURG, LONDON, MANCHESTER
----response ends--

one more example
  Prompt: show the cities which are in Europe

--response begins--
The European cities listed on the departures board are:

* **Moscow:**  While a large part of Russia is geographically in Asia, Moscow is firmly located in European Russia.
* **Edinburgh:**  Scotland, United Kingdom
* **London:** England, United Kingdom
* **Bucharest:** Romania
* **Kiev (Kyiv):** Ukraine
* **Dublin:** Ireland
* **East Midlands:** England, United Kingdom
* **Sofia:** Bulgaria
* **Newcastle:** England, United Kingdom
* **St. Petersburg:** Russia (similar to Moscow, considered part of European Russia despite the country spanning two continents)
* **Manchester:** England, United Kingdom
------response ends---

Analyze the information on the image. Replace the previous prompt with the following:
  Prompt: Calculate the percentage of the flights to different continents.

--response--

Here's the breakdown of flights by continent based on the departure board:

**Europe:**

* **Edinburgh:** Scotland
* **London (LHR & LGW):** England
* **Bucharest:** Romania
* **Kiev:** Ukraine
* **Dublin:** Ireland
* **East Midlands:** England
* **Sofia:** Bulgaria
* **Newcastle:** England
* **St. Petersburg:** Russia
* **Manchester:** England


* **Moscow:** Russia
This constitutes 100% of listed destinations.

response ends---

> change temperature to 1.1

--response--
Here's the breakdown of flights by continent based on the departure board:

**Europe:**

* **Edinburgh:** Scotland
* **London (LHR & LGW):** England
* **Bucharest:** Romania
* **Kiev/Borispol:** Ukraine
* **Dublin:** Ireland
* **East Midlands:** England
* **Sofia:** Bulgaria
* **Newcastle:** England
* **St. Petersburg:** Russia
* **Manchester:** England
* **Moscow:** Russia

This accounts for all 11 listed destinations, making it 100% of the flights 
on the board.

Therefore, the answer is:

* **Europe: 100%**
* **Other Continents: 0%**
--response ends---

Does the result meet your expectations? 
--Try different prompts for various tasks. 
--Experiment with different temperature settings to observe the changes in the result.

Once you finish the prompt design, save the prompt by clicking Save.

To find your saved prompts, on the left-hand navigation menu, 
navigate to Prompt Management.

Note**After selecting Save, give the prompts a few seconds to properly save 
and then proceed further. Click "Try again" if prompted "failed to update history."

Task 2. 
Explore multimodal capabilities
In addition to images, text, and audio, Gemini is capable of accepting videos as 
inputs and generating text as an output.

Navigate to Cloud Storage > Buckets and copy the name of your Cloud Storage 
bucket and save it to use in the further step.

for example:  cloud-ai-platform-43eb3855-4c61-4dff-a192-c8d8037990d4
Click Activate Cloud Shell Activate Cloud Shell icon at the top of the
Google Cloud console.

In your Cloud Shell terminal, run the command below to copy 
the sample video gs://spls/gsp154/video/train.mp4 (preview) to your
Cloud Storage bucket. Replace <Your-Cloud-Storage-Bucket> with the bucket 
name you copied earlier.

[command]
gcloud storage cp gs://spls/gsp154/video/train.mp4 gs://<Your-Cloud-Storage-Bucket>

For example:
gcloud storage cp gs://spls/gsp154/video/train.mp4 gs://cloud-ai-platform-43eb3855-4c61-4dff-a192-c8d8037990d4

Copying gs://spls/gsp154/video/train.mp4 to gs://cloud-ai-platform-43eb3855-4c61-4dff-a192-c8d8037990d4/train.mp4
Completed files 1/1 | 6.3MiB/6.3MiB                                                                                                                   

Now
From the Navigation menu (Navigation menu), select Vertex AI > Vertex AI Studio > 
Overview.

Under Generate with Gemini, click Open Freeform.

On the top right under Model, select the gemini-1.5-pro-002 model.

Click Insert Media > Import from Cloud Storage.

Click on your bucket name and then click on the sample video i.e., train.mp4 
and click Select.

Generate information about the video by inserting the following prompt 
and clicking the Submit button.
  Prompt: Title the video.

--response begins--
Sure! Here are some title suggestions:

* Train Passes By in the Rain
* Rainy Day Rail
* Commuter Train on a Wet Track
* Watching Trains Go By on a Rainy Day
* Rail Journey in the Rain

--response ends--

Freeform mode offers many capabilities such as writing stories from images, 
analyzing videos, and generating multimedia ads. 
Explore more freeform use cases by clicking Prompt gallery. 
Check out more information about design multimodal prompts 
> https://cloud.google.com/vertex-ai/docs/generative-ai/multimodal/design-multimodal-prompts

Task 3. 
Design text prompts
Here we can try zero-shot, one-shot, and few-shot prompting.

Prompt design
You can feed your desired input text, e.g. a question, to the model. 
The model will then provide a response based on how you structured your prompt. 
The process of figuring out and designing the best input text (prompt) to 
get the desired response back from the model is called Prompt Design.

Prompt design methods
There are three main methods to design prompts:

Zero-shot prompting - This is a method where the LLM is given only a prompt that 
describes the task and no additional data. 
For example, if you want the LLM to answer a question, you just prompt 
"what is prompt design?".

One-shot prompting - This is a method where the LLM is given a single example of 
the task that it is being asked to perform. 
For example, if you want the LLM to write a poem, you might give it a single 
example poem.

Few-shot prompting - This is a method where the LLM is given a small number of 
examples of the task that it is being asked to perform. 
For example, if you want the LLM to write a news article, you might give it 
a few news articles to read.

Parameters
Temperature and Token limit are two important parameters that you can adjust to 
influence the model's response.

Temperature controls the randomness in token selection as discussed earlier.

The gemini-1.5-pro model has a temperature range of 0 - 2 and a default of 1.
Output token limit determines the maximum amount of text output from one prompt.
A token is approximately four characters.

Zero-shot prompting
Try zero-shot prompting in Free-form mode.

Navigate back to the Vertex AI Studio > Overview page and click Open Freeform.
Name the prompt as Sentiment Analysis.
On the top right under Model, select the gemini-1.5-pro-002 model.

Copy the following over to the prompt input field:
  Prompt: What is a prompt gallery?
Click on the Submit button.

--response begins--
A prompt gallery, in the context of AI art generators and other generative AI models, is essentially a **collection of carefully crafted text prompts** that are intended to produce specific or desirable outputs. Think of it as a curated library of "recipes" for generating content.
Here's a breakdown of what that means:
**Key Characteristics of a Prompt Gallery:**

* **Curated:** Prompt galleries aren't just random collections of text. They're typically assembled with a specific goal in mind, such as showcasing different artistic styles, demonstrating specific features of an AI model, or providing a starting point for users who are new to prompt engineering.
* **Structured:** Prompts within a gallery might be categorized by theme, style, or complexity. This helps users easily find prompts that match their interests.
* **Inspiration and Education:** They serve as both inspiration for users who are looking for ideas and an educational resource for understanding how different wording and keywords affect the output of an AI model.
* **Variety:** A good prompt gallery should offer a variety of prompts covering diverse topics, styles, and techniques.
* **Often Visualized:** Often, prompt galleries are paired with the images or outputs that the prompts generated. This helps users see the direct relationship between the text input and the resulting AI-generated content.

**Why are Prompt Galleries Useful?**
* **Learning Prompt Engineering:** By examining and experimenting with prompts in a gallery, users can learn the nuances of prompt engineering and understand what kinds of language generate specific results.
* **Saving Time:** Instead of starting from scratch, users can adapt existing prompts from a gallery to create their own unique content.
* **Exploring AI Capabilities:** Galleries can showcase the full potential of an AI model, highlighting its ability to generate different styles, subjects, and concepts.
* **Overcoming "Blank Canvas" Syndrome:** They provide a starting point for users who might be intimidated by a blank text box.
* **Community Sharing and Collaboration:** Some prompt galleries are created and shared by the AI community, fostering collaboration and knowledge sharing.

**Examples of Where You Might Find Prompt Galleries:**
* **AI Art Generator Websites:** Many AI art generators, like Midjourney, DALL-E 2, Stable Diffusion, and others, have their own prompt galleries (sometimes publicly available, sometimes within their platforms).
* **Online Communities and Forums:** Communities dedicated to AI art often share prompt galleries as a resource for members.
* **Tutorials and Guides:** You'll often find prompt examples in tutorials and guides for using specific AI models.
* **Dedicated Prompt Sharing Websites:** There are websites specifically designed for sharing and discovering AI prompts.

**In essence, a prompt gallery is a valuable tool for anyone interested in exploring the world of generative AI. It provides inspiration, education, and a shortcut to creating amazing content.** By studying and adapting prompts from galleries, users can become more skilled at prompt engineering and unlock the full potential of these powerful tools.
--response ends--

The model will respond to a comprehensive definition of the term prompt gallery.

Adjust the Output Token limit parameter to 1024 and click the SUBMIT button.

--response--
A prompt gallery, in the context of AI and specifically generative AI (like text-to-image, text-to-text, or text-to-code models), is a curated collection of **example prompts** along with their corresponding **outputs** and sometimes **additional information** about how the prompt was constructed.
Think of it as a visual or interactive library of "recipes" for getting the results you want from an AI model.
Here's a breakdown of the key aspects:

**Purpose of a Prompt Gallery:**
* **Inspiration:** Provides users with ideas and starting points for crafting their own prompts.
* **Learning:** Helps users understand the different ways prompts can be structured to influence the AI's output.
* **Experimentation:** Encourages users to try different prompts and see how they affect the generated content.
* **Demonstration:** Showcases the capabilities of the AI model and its potential uses.
* **Efficiency:** Saves time by providing pre-made prompts that can be adapted or used directly.
* **Community Sharing:** Facilitates the sharing of best practices and effective prompting techniques within a community.

**Typical Elements of a Prompt Gallery Entry:**
* **Prompt:** The text or code input that was given to the AI model.
* **Output:** The result generated by the AI model in response to the prompt (e.g., an image, a piece of text, code).
* **Description/Notes:** Often includes explanations of why the prompt was effective, the specific techniques used (e.g., negative prompts, specific keywords), and any adjustments made.
* **Metadata:** May include details like the AI model used, the parameters adjusted, and the creator of the prompt.
* **Categories/Tags:** Helps users navigate and filter through the gallery based on topics, styles, or specific tasks.

**Where You Might Find Prompt Galleries:**
* **Platforms for AI tools:** Many generative AI platforms (e.g., Midjourney, DALL-E 2, Stable Diffusion, ChatGPT) offer their own prompt galleries to help users get started.
* **Community websites and forums:** Online communities dedicated to specific AI tools often share and maintain prompt galleries.
* **Independent websites and resources:** There are websites dedicated specifically to collecting and organizing prompts for various AI models.
* **Educational resources:** Tutorials and online courses about using generative AI often incorporate prompt galleries as part of their learning materials.

**Benefits of Using Prompt Galleries:**
* **Faster Learning Curve:** Allows users to quickly understand the nuances of prompting without requiring extensive experimentation.
* **Improved Results:** Helps users achieve better and more consistent results by learning from best practices.
* **Reduced Frustration:** Minimizes the time spent struggling to craft effective prompts.
* **Creative Inspiration:** Sparks new ideas and helps users explore the full potential of generative AI.

**In Summary:**
A prompt gallery is a valuable resource for anyone working with generative AI. It acts as a library of examples, offering inspiration, guidance, and a way to quickly understand and master the art of prompting. It's a crucial tool for unlocking the power of these powerful AI models.
--response ends--

Adjust the Temperature parameter to 0.5 and click the SUBMIT button.(test)
Adjust the Temperature parameter to 2.0 and click the SUBMIT button.(test)
Inspect how the responses change as to change the parameters.

One-shot prompting
You can design prompts in more organized ways. You can provide Context and 
Examples in their respective input fields. One-shot prompting is a method 
where the model is given a single example of the task that it is being asked 
to perform. 

In this section, you will ask the model to complete a sentence.

Start by removing any text from the Prompt box.

Inside of the Prompt box, click Add examples. 
This will open a new window where you can add examples for the prompt.

Add this to the INPUT field:
The color of the grass is

Add this to the OUTPUT field:
The color of the grass is green

Click on the Add examples button.

In the Test field, copy the following in the Input field.

The color of the sky is

Click on the Submit button. You should receive a response from the model
similar to the following:
The color of the sky is blue

Instead of completing the sentence, the model gave a full sentence as a response 
since you provided an example for the model to base its output from. 
To change the response to simply complete the sentence, you can adjust
the example provided in the OUTPUT field.

Click the Examples button in the Prompt box and change the OUTPUT field to:

Green

Click on the Add examples button.
In the Test field, copy the following in the Input field.

The color of the sky is

Click on the Submit button. You should receive a response from the model 
similar to the following:

blue

You can see that the model now completes the sentence based on the example
 you provided. You have successfully influenced the way the model produces response.

Few-shot prompting
Now we will use the model to perform sentiment analysis on a sentence, 
such as determining whether a movie review is positive or negative using 
few-shot prompting.

In the Prompt field, delete your examples from the previous section. 
To delete your examples, hover over the Examples and click the X (Remove File) button.

Click the Add examples button to add more examples.

Add the following examples:
Input                             Output
A well-made and entertaining film	positive
I fell asleep after 10 minutes	  negative
The movie was ok	                neutral

Once you have added the examples, click on the Add examples button.

In the Test field, copy the following in the Input field.
It was a time well spent!

Click on the Submit button.

The model now provides a sentiment for the input text. For the text 
It was a time well spent!, the sentiment is labeled as positive.

Task 4. 
Generate conversations
Chat mode is a conversational mode that allows you to have a freeform chat with 
the model. The model uses the conversation history as context for future responses. 
In this section, you will create a chat prompt and have a conversation with the model.

From the left menu, navigate to Chat to create a new chat prompt.
Name the prompt as Support Technician Helper
On the top right under Model, select the gemini-1.5-flash-002 model.

For this section, you will add context to the chat and let the model respond 
based on the context provided.

Click System instructions and add the following context:
Your name is Joy.
You are a support technician of an IT department.
You only respond with "Have you tried turning it off and on again?" to any queries.

Insert the following prompt:
  Prompt: My computer is so slow! What should I do?
click on submit

The model should respond with the following:
  Have you tried turning it off and on again?

In System instructions, click Clear value.

Click System instructions and add the following context:

Your name is Roy.
You are a support technician of an IT department.
You are here to support the users with their queries.

Insert the following prompt:
  Prompt: My computer is so slow! What should I do?

Click the Submit button.
The model should now be more helpful in its response to the user query.

Feel free to experiment with different prompts and context to see how the model 
responds. You can also add more context to the chat prompt to see how the model 
responds based on the context provided.

For example: 
try changing instructions to
Your name is Roy.
You are a support technician of an IT department but you handle only mailbox queries.
You are here to support the users with their mailbox queries.

and test with same prompt

response--
As a mailbox support technician, I'm not qualified to troubleshoot computer 
performance issues.  My expertise lies solely in email-related problems.  
To get help with your slow computer, I strongly recommend searching online 
for solutions specific to your operating system (Windows, macOS, etc.) 
and the symptoms you're experiencing.  You can also contact a computer 
repair professional for assistance.

response ends--







